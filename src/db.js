const fs = require("fs");
const DB_PATH = "./src/db.json";

function readDB() {
  try {
    if (!fs.existsSync(DB_PATH)) {
      console.warn("‚ö†Ô∏è –§–∞–π–ª –ë–î –Ω–µ —ñ—Å–Ω—É—î, —Å—Ç–≤–æ—Ä—é—î–º–æ –Ω–æ–≤–∏–π...");
      return { articles: [] };
    }

    const rawData = fs.readFileSync(DB_PATH, "utf8");
    if (!rawData.trim()) {
      console.warn("‚ö†Ô∏è –§–∞–π–ª –ë–î –ø–æ—Ä–æ–∂–Ω—ñ–π, –ø–æ–≤–µ—Ä—Ç–∞—î–º–æ –ø–æ—á–∞—Ç–∫–æ–≤—ñ –¥–∞–Ω—ñ...");
      return { articles: [] };
    }

    return JSON.parse(rawData);
  } catch (error) {
    console.error("‚ùå –ü–æ–º–∏–ª–∫–∞ —á–∏—Ç–∞–Ω–Ω—è –ë–î:", error.message);
    return { articles: [] }; // –ü–æ–≤–µ—Ä—Ç–∞—î–º–æ –±–∞–∑–æ–≤—ñ –∑–Ω–∞—á–µ–Ω–Ω—è, —â–æ–± —É–Ω–∏–∫–Ω—É—Ç–∏ –ø–∞–¥—ñ–Ω–Ω—è –±–æ—Ç–∞
  }
}

function saveDB(data) {
  try {
    fs.writeFileSync(DB_PATH, JSON.stringify(data, null, 2));
    console.log("üíæ –ë–∞–∑–∞ –¥–∞–Ω–∏—Ö –æ–Ω–æ–≤–ª–µ–Ω–∞!");
  } catch (error) {
    console.error("‚ùå –ü–æ–º–∏–ª–∫–∞ –∑–±–µ—Ä–µ–∂–µ–Ω–Ω—è –ë–î:", error.message);
  }
}

module.exports = { readDB, saveDB };